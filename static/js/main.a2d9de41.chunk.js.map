{"version":3,"sources":["Context/UserContext.js","Context/ClientContext.js","Componenets/MyNav.js","Componenets/MyFooter.js","Componenets/NoPosts.js","resources/noun_hoof_3071279.png","Componenets/Post.js","Componenets/ToTopButton.js","Componenets/BuildPostCards.js","Componenets/RefreshButton.js","Componenets/RandomDeerPhoto.js","Componenets/LoginForm.js","Componenets/BarkForm.js","Componenets/MoreButton.js","Componenets/NewUserForm.js","Pages/Feed.js","Pages/HoofedHouse.js","Pages/AddBark.js","Pages/Login.js","Pages/PrivateRoute.js","Pages/UserBarks.js","Pages/EditBark.js","Pages/NewUser.js","Clients/apiClient.js","Settings/toastrSettings.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","ClientContext","MyNav","logout","user","useContext","Navbar","bg","variant","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Text","username","onClick","e","href","MyFooter","ModalFooter","target","rel","React","Component","NoPosts","Card","Body","Row","Col","querystring","require","Post","currentPost","refreshPosts","editable","client","likeHandler","a","addLike","deleteHandler","preventDefault","deletePost","currentTarget","then","toastr","success","catch","error","dateTime","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","format","timestamp","queryString","encode","md","xs","Image","src","imageData","url","creatorLink","creatorUsername","postTitle","postText","Button","_id","lg","hoof","alt","likes","ToTopButton","currentPage","link","smooth","icon","faArrowAltCircleUp","size","BuildPostCards","posts","length","map","RefreshButton","RandomDeerPhoto","buttonText","preLoadText","returnPhotoData","useState","randomPhoto","setRandomPhoto","randomButtonHandler","unsplashRandomPhoto","photoFromUnsplash","response","urls","regular","name","LoginForm","storeUserToken","password","loginForm","setLoginForm","setUser","Form","onSubmit","login","res","data","token","err","submitHandler","Group","controlId","Label","Control","type","value","placeholder","autoFocus","required","onChange","BarkForm","bark","setBark","as","rows","tags","MoreButton","incrementPostsPosition","NewUserForm","newUser","setNewUser","password1","password2","Feed","setPosts","limit","skip","postsPosition","setPostsPosition","useCallback","getAllPosts","postsFromServer","warning","useEffect","HoofedHouse","AddBark","submitted","setSubmitted","event","addPost","Login","route","URLSearchParams","useLocation","search","get","PrivateRoute","props","path","pathname","pathQuery","slice","children","UserBarks","getOneUsersPosts","EditBark","query","currentBark","updatePost","NewUser","addUser","unsplashApi","createApi","accessKey","env","UNSPLASHACCESSKEY","ApiClient","tokenProvider","logoutHandler","this","axios","method","params","postId","headers","authorization","status","Promise","reject","post","Date","now","authenticatedCall","newPassword","count","orientation","getPhotos","photos","getRandom","toastrSettings","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","App","window","localStorage","getItem","setToken","deleteUserToken","userValue","useMemo","clientValue","options","removeItem","undefined","info","Provider","Container","exact","render","t","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2d9de41.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const ClientContext = createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../Context\";\r\nimport \"../Styles/Navbar.css\";\r\n\r\nfunction MyNav({ logout }) {\r\n  const { user } = useContext(UserContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n      <Link to=\"/\">\r\n        <Navbar.Brand>FaceBuck</Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Navbar.Text className=\"nav-link\">\r\n            <Link to=\"/\">Deer Feed</Link>\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"nav-link\">\r\n            <Link to=\"/add\">Add Bark</Link>\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"nav-link\">\r\n            <Link to=\"/house\">Hoofed House</Link>\r\n          </Navbar.Text>\r\n        </Nav>\r\n        <Nav>\r\n          <Navbar.Text className=\"nav-link\">\r\n            {user ? (\r\n              <Link to=\"/userbarks\">{user.username}</Link>\r\n            ) : (\r\n              <Link to=\"/new-user\">New User</Link>\r\n            )}\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"nav-link\">\r\n            {user ? (\r\n              <button\r\n                className=\"logout-btn navbar-dark \"\r\n                onClick={(e) => logout()}\r\n              >\r\n                Log Out\r\n              </button>\r\n            ) : (\r\n              <Link to=\"/login\">Log In</Link>\r\n            )}\r\n          </Navbar.Text>\r\n          <Navbar.Text className=\"nav-link\">\r\n            <a href=\"https://www.matthewcotton.dev/#/projects\">\r\n              Back to Portfolio\r\n            </a>\r\n          </Navbar.Text>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\r\nimport \"../Styles/Footer.css\";\r\n\r\nclass MyFooter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <ModalFooter className=\"footer text-right\">\r\n          <p className=\"license\">\r\n            <a\r\n              href=\"https://thenounproject.com/search/?q=hoof&i=3071279\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              hoof\r\n            </a>{\" \"}\r\n            by P Thanga Vignesh from the Noun Project.{\" \"}\r\n          </p>\r\n        </ModalFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyFooter;\r\n","import React from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Styles/NoPosts.css\";\r\n\r\nconst NoPosts = () => {\r\n  return (\r\n    <Card className=\"no-posts\">\r\n      <Card.Body>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h3>No Posts</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p>\r\n              Go to the <Link to=\"/add\">Add Bark</Link> Page to create a post or\r\n              two.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NoPosts;\r\n","export default __webpack_public_path__ + \"static/media/noun_hoof_3071279.40e06e57.png\";","import React, { useContext } from \"react\";\r\nimport { ClientContext } from \"../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport hoof from \"../resources/noun_hoof_3071279.png\";\r\nimport \"../Styles/Post.css\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nconst querystring = require(\"querystring\");\r\n\r\nconst Post = ({ currentPost, refreshPosts, editable }) => {\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const likeHandler = async (id) => {\r\n    await client.addLike(id);\r\n    refreshPosts();\r\n  };\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    await client\r\n      .deletePost(e.currentTarget.id)\r\n      .then(() => {\r\n        toastr.success(\"Your bark was successfully deleted\", \"GONE!\");\r\n        refreshPosts();\r\n      })\r\n      .catch((error) => {\r\n        toastr.error(error, \"Delete Error\");\r\n      });\r\n  };\r\n\r\n  const dateTimeOptions = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n  };\r\n  const dateTime = new Intl.DateTimeFormat(\"en-GB\", dateTimeOptions).format(\r\n    currentPost.timestamp\r\n  );\r\n\r\n  let queryString = querystring.encode(currentPost);\r\n\r\n  // var queryString = Object.keys(currentPost).map(key => key + '=' + currentPost[key]).join('&');\r\n\r\n  return (\r\n    <Card className=\"post\">\r\n      <Card.Body className=\"post-body\">\r\n        <Row>\r\n          <Col className=\"post-col\" md={3} xs={5}>\r\n            <Image className=\"profile-pic\" src={currentPost.imageData.url} />\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              href={currentPost.imageData.creatorLink}\r\n            >\r\n              {currentPost.imageData.creatorUsername}\r\n            </a>\r\n          </Col>\r\n          <Col className=\"post-col\" xs={7} md={8}>\r\n            <h4 className=\"post-title\">{currentPost.postTitle}</h4>\r\n            <p className=\"post-text\">{currentPost.postText}</p>\r\n          </Col>\r\n          {editable && (\r\n            <Col className=\"post-col text-right\">\r\n              <Button className=\"edit-btn\" variant=\"warning\">\r\n                <Link className=\"edit-link\" to={`/editbark?${queryString}`}>\r\n                  Edit\r\n                </Link>\r\n              </Button>\r\n              <Button\r\n                className=\"edit-btn\"\r\n                variant=\"warning\"\r\n                id={currentPost._id}\r\n                onClick={(e) => deleteHandler(e)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"post-col\" lg={3} md={4} xs={12}>\r\n            <h4>{currentPost.username}</h4>\r\n          </Col>\r\n          <Col className=\"post-col\" lg={3} xs={12}>\r\n            <Button\r\n              className=\"like-btn\"\r\n              variant=\"warning\"\r\n              id={currentPost._id}\r\n              onClick={(e) => likeHandler(e.currentTarget.id)}\r\n            >\r\n              <img className=\"like-hoof\" src={hoof} alt=\"Hoofs Up!\" />{\" \"}\r\n              {currentPost.likes}{\" \"}\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"post-col align-self-end text-right\">\r\n            <p>{dateTime}</p>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowAltCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../Styles/ToTopButton.css\";\r\n\r\nexport const ToTopButton = ({ currentPage }) => {\r\n  const link = `${currentPage}/#top`;\r\n\r\n  return (\r\n    <Row className=\"justify-content-end\">\r\n      <Col className=\"top-btn-col text-right\" xs={3} lg={1}>\r\n        <HashLink smooth to={link}>\r\n          <FontAwesomeIcon\r\n            className=\"arrow-up\"\r\n            icon={faArrowAltCircleUp}\r\n            size=\"4x\"\r\n          />\r\n        </HashLink>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Post, NoPosts } from \"../Componenets\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst BuildPostCards = ({ refreshPosts, posts, editable }) => {\r\n  return (\r\n    <div>\r\n      {posts.length === 0 ? (\r\n        <NoPosts />\r\n      ) : (\r\n        posts.map((currentPost) => (\r\n          <Row className=\"justify-content-md-center\" key={currentPost._id}>\r\n            <Post\r\n              key={currentPost._id}\r\n              currentPost={currentPost}\r\n              refreshPosts={refreshPosts}\r\n              editable={editable}\r\n            />\r\n          </Row>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildPostCards;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport hoof from \"../resources/noun_hoof_3071279.png\";\r\nimport \"../Styles/RefreshButton.css\";\r\n\r\nconst RefreshButton = ({ refreshPosts }) => {\r\n  const refreshHandler = () => refreshPosts();\r\n\r\n  return (\r\n    <Button\r\n    className=\"refresh-btn\"\r\n      onClick={(e) => refreshHandler(e.currentTarget.id)}\r\n      variant=\"warning\"\r\n    >\r\n      <img className=\"refresh-hoof\" src={hoof} alt=\"Fresh feed\" />\r\n      (re)Fresh Feed\r\n      <img className=\"refresh-hoof\" src={hoof} alt=\"Fresh feed\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default RefreshButton;\r\n","import React, { useContext } from \"react\";\r\nimport { ClientContext } from \"../Context\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport \"../Styles/RandomDeerPhoto.css\";\r\n\r\nconst RandomDeerPhoto = ({ buttonText, preLoadText, returnPhotoData }) => {\r\n  const [randomPhoto, setRandomPhoto] = useState(null);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const randomButtonHandler = async () => {\r\n    const photoFromUnsplash = await client.unsplashRandomPhoto(\"deer\", 1);\r\n    setRandomPhoto(photoFromUnsplash.response);\r\n    if (returnPhotoData) {\r\n      returnPhotoData(photoFromUnsplash.response[0]);\r\n    }\r\n  };\r\n\r\n  const imageCheck = () => {\r\n    if (randomPhoto === null) {\r\n      return <p>{preLoadText}</p>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Image\r\n                className=\"random-photo\"\r\n                src={randomPhoto[0].urls.regular}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={`https://unsplash.com/@${randomPhoto[0].user.username}`}\r\n              >\r\n                {randomPhoto[0].user.name}\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {imageCheck()}\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          <Button\r\n            className=\"random-btn\"\r\n            onClick={(e) => randomButtonHandler(e)}\r\n            variant=\"warning\"\r\n          >\r\n            {buttonText}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomDeerPhoto;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { UserContext, ClientContext } from \"../Context\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nexport const LoginForm = ({ storeUserToken }) => {\r\n  const [loginForm, setLoginForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const { setUser } = useContext(UserContext);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!loginForm.username || !loginForm.password) {\r\n      toastr.error(\r\n        \"Please enter username and password.\",\r\n        \"Username or Password Error\"\r\n      );\r\n      return;\r\n    }\r\n    client\r\n      .login(loginForm.username, loginForm.password)\r\n      .then((res) => {\r\n        storeUserToken(res.data.token);\r\n        setUser({ username: res.data.username });\r\n      })\r\n      .catch((err) => {\r\n        toastr.error(\r\n          `An error occured while logging in. Please try again. ${err.response.data}.`,\r\n          \"Login Error\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col className=\"text-center\">\r\n        <br />\r\n        <Form onSubmit={(e) => submitHandler(e)}>\r\n          <Form.Group controlId=\"loginUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={loginForm.username}\r\n              placeholder=\"enter your username\"\r\n              autoFocus\r\n              required\r\n              onChange={(e) =>\r\n                setLoginForm({ ...loginForm, username: e.target.value })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"loginPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={loginForm.password}\r\n              placeholder=\"enter your password\"\r\n              required\r\n              onChange={(e) =>\r\n                setLoginForm({ ...loginForm, password: e.target.value })\r\n              }\r\n            />\r\n            <br />\r\n            <Button variant=\"warning\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\n\r\nexport const BarkForm = ({ submitHandler, bark, setBark }) => {\r\n  return (\r\n    <Row className=\"justify-content-center\">\r\n      <Col xs={12} lg={8}>\r\n        <br />\r\n        <Form onSubmit={(e) => submitHandler(e)}>\r\n          <Form.Group controlId=\"postTitle\">\r\n            <Form.Label>Post Title*</Form.Label>\r\n            <Form.Control\r\n              name=\"postTitle\"\r\n              type=\"text\"\r\n              required\r\n              value={bark.postTitle}\r\n              placeholder=\"add post title\"\r\n              onChange={(e) => setBark({ ...bark, postTitle: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"postText\">\r\n            <Form.Label>Post Text*</Form.Label>\r\n            <Form.Control\r\n              name=\"postText\"\r\n              type=\"text\"\r\n              as=\"textarea\"\r\n              rows={3}\r\n              required\r\n              value={bark.postText}\r\n              placeholder=\"add post text\"\r\n              onChange={(e) => setBark({ ...bark, postText: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"postTags\">\r\n            <Form.Label>Tags</Form.Label>\r\n            <Form.Control\r\n              name=\"tags\"\r\n              type=\"text\"\r\n              value={bark.tags}\r\n              placeholder=\"add tags\"\r\n              onChange={(e) => setBark({ ...bark, tags: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              <Button variant=\"warning\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../Styles/MoreButton.css\";\r\n\r\nexport const MoreButton = ({ incrementPostsPosition }) => {\r\n  return (\r\n    <Button\r\n      className=\"more-btn\"\r\n      onClick={() => incrementPostsPosition()}\r\n      variant=\"warning\"\r\n    >\r\n      More Please\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\n\r\nexport const NewUserForm = ({ submitHandler, newUser, setNewUser }) => {\r\n  return (\r\n    <>\r\n      <br />\r\n      <Form onSubmit={(e) => submitHandler(e)}>\r\n        <Form.Group controlId=\"newUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            name=\"username\"\r\n            type=\"text\"\r\n            required\r\n            value={newUser.username}\r\n            placeholder=\"username\"\r\n            onChange={(e) =>\r\n              setNewUser({ ...newUser, username: e.target.value })\r\n            }\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"newPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password1\"\r\n            type=\"password\"\r\n            required\r\n            value={newUser.password1}\r\n            placeholder=\"password\"\r\n            onChange={(e) =>\r\n              setNewUser({ ...newUser, password1: e.target.value })\r\n            }\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"newPasswordCheck\">\r\n          <Form.Label>Repeat Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password2\"\r\n            type=\"password\"\r\n            required\r\n            value={newUser.password2}\r\n            placeholder=\"password\"\r\n            onChange={(e) =>\r\n              setNewUser({ ...newUser, password2: e.target.value })\r\n            }\r\n          />\r\n        </Form.Group>\r\n\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <Button variant=\"warning\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport {\r\n  BuildPostCards,\r\n  ToTopButton,\r\n  RefreshButton,\r\n  MoreButton,\r\n} from \"../Componenets\";\r\nimport { ClientContext } from \"../Context\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport const Feed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [postsPosition, setPostsPosition] = useState({ limit: 10, skip: 0 });\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const refreshPosts = useCallback(async () => {\r\n    const postsFromServer = await client.getAllPosts(\r\n      postsPosition.limit,\r\n      postsPosition.skip\r\n    );\r\n    if (postsFromServer.length > 0) {\r\n      setPosts(postsFromServer);\r\n    } else {\r\n      toastr.warning(\"No more barks available\");\r\n    }\r\n  }, [client, postsPosition.skip, postsPosition.limit]);\r\n\r\n  const incrementPostsPosition = useCallback(() => {\r\n    setPostsPosition({\r\n      ...postsPosition,\r\n      skip: postsPosition.skip + postsPosition.limit,\r\n    });\r\n  }, [postsPosition]);\r\n\r\n  useEffect(() => {\r\n    refreshPosts();\r\n  }, [refreshPosts]);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <br />\r\n          <h1 className=\"text-center\">Deer Feed</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"text-center\" xs={8} lg={4}>\r\n          <RefreshButton refreshPosts={refreshPosts} />\r\n        </Col>\r\n      </Row>\r\n      <BuildPostCards\r\n        client={client}\r\n        posts={posts}\r\n        refreshPosts={refreshPosts}\r\n        editable={false}\r\n      />\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"text-center\">\r\n          <MoreButton incrementPostsPosition={incrementPostsPosition} />\r\n        </Col>\r\n      </Row>\r\n      <ToTopButton currentPage=\"\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ToTopButton, RandomDeerPhoto } from \"../Componenets\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport const HoofedHouse = () => {\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <br />\r\n          <h1 className=\"text-center\">Hoofed House</h1>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={12} lg={8} className=\"text-center\">\r\n          <RandomDeerPhoto\r\n            buttonText=\"Who's in the House\"\r\n            preLoadText=\"Do you want to see a hoofed ruminant mammal?\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ToTopButton currentPage=\"/house\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { BarkForm, RandomDeerPhoto } from \"../Componenets\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { UserContext, ClientContext } from \"../Context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nexport const AddBark = () => {\r\n  const { user } = useContext(UserContext);\r\n  const [bark, setBark] = useState({\r\n    username: user.username,\r\n    postTitle: \"\",\r\n    postText: \"\",\r\n    imageData: {},\r\n    tags: \"\",\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!bark.postTitle || !bark.postText) {\r\n      toastr.error(\"Please complete all form fields.\", \"Complete Form\");\r\n      return;\r\n    }\r\n    if (!bark.imageData.url) {\r\n      toastr.error(\r\n        \"Please click 'Which deer are you?' to select a photo.\",\r\n        \"Photo Required\"\r\n      );\r\n      return;\r\n    }\r\n    await client\r\n      .addPost(bark)\r\n      .then(() => {\r\n        setBark({\r\n          username: user.username,\r\n          postTitle: \"\",\r\n          postText: \"\",\r\n          imageData: {},\r\n          tags: \"\",\r\n        });\r\n        toastr.success(\r\n          \"Buck up! Your bark was successfully published.\",\r\n          \"BARK!\"\r\n        );\r\n        setSubmitted(true);\r\n      })\r\n      .catch((error) => {\r\n        toastr.error(error, \"Error\");\r\n      });\r\n  };\r\n\r\n  const saveImageData = (data) => {\r\n    setBark({\r\n      ...bark,\r\n      imageData: {\r\n        url: data.urls.regular,\r\n        creatorUsername: data.user.name,\r\n        creatorLink: `https://unsplash.com/@${data.user.username}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {submitted ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center\">\r\n            <Col>\r\n              <br />\r\n              <h1 className=\"text-center\">Add Bark</h1>\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <br />\r\n              <RandomDeerPhoto\r\n                buttonText=\"Which deer are you?\"\r\n                preLoadText=\"\"\r\n                returnPhotoData={saveImageData}\r\n              />\r\n            </Col>\r\n            <Col xs={12} lg={6}>\r\n              <BarkForm\r\n                submitHandler={submitHandler}\r\n                bark={bark}\r\n                setBark={setBark}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../Context\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport { LoginForm } from \"../Componenets\";\r\n\r\n// Split out into a service function\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const Login = ({ storeUserToken }) => {\r\n  const { user } = useContext(UserContext);\r\n  const query = useQuery();\r\n  let route = query.get(\"route\");\r\n  route = route ? route : \"\";\r\n\r\n  return user ? (\r\n    <Redirect to={`/${route}`} />\r\n  ) : (\r\n    <div>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <br />\r\n          <h1 className=\"text-center\">Login</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={10} md={6} lg={4}>\r\n          <LoginForm storeUserToken={storeUserToken} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { UserContext } from \"../Context\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = (props) => {\r\n  const { user } = useContext(UserContext);\r\n  let path = useLocation().pathname;\r\n  path = path.slice(1, path.length);\r\n  const pathQuery = path ? `?route=${path}` : \"\";\r\n\r\n  return (\r\n    <Fragment>\r\n      {user ? props.children : <Redirect to={`/login${pathQuery}`} />}\r\n    </Fragment>\r\n  );\r\n};\r\n","import { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport { BuildPostCards, ToTopButton, MoreButton } from \"../Componenets\";\r\nimport { ClientContext, UserContext } from \"../Context\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport const UserBarks = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [postsPosition, setPostsPosition] = useState({ limit: 10, skip: 0 });\r\n  const { user } = useContext(UserContext);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const refreshPosts = useCallback(async () => {\r\n    const postsFromServer = await client.getOneUsersPosts(\r\n      user.username,\r\n      postsPosition.limit,\r\n      postsPosition.skip\r\n    );\r\n    if (postsFromServer.length > 0) {\r\n      setPosts(postsFromServer);\r\n    } else {\r\n      toastr.warning(\"No more barks available\");\r\n    }\r\n  }, [client, postsPosition, user]);\r\n\r\n  const incrementPostsPosition = useCallback(() => {\r\n    setPostsPosition({\r\n      ...postsPosition,\r\n      skip: postsPosition.skip + postsPosition.limit,\r\n    });\r\n  }, [postsPosition]);\r\n\r\n  useEffect(() => {\r\n    refreshPosts();\r\n  }, [refreshPosts]);\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <br />\r\n          <h1 className=\"text-center\">Your Barks</h1>\r\n        </Col>\r\n      </Row>\r\n      <BuildPostCards\r\n        client={client}\r\n        posts={posts}\r\n        refreshPosts={refreshPosts}\r\n        editable={true}\r\n      />\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"text-center\">\r\n          <MoreButton incrementPostsPosition={incrementPostsPosition} />\r\n        </Col>\r\n      </Row>\r\n      <ToTopButton currentPage=\"\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ClientContext } from \"../Context\";\r\nimport { BarkForm } from \"../Componenets\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\n// Split out into a service function\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport const EditBark = () => {\r\n  const query = useQuery();\r\n\r\n  const currentBark = {\r\n    id: query.get(\"_id\"),\r\n    username: query.get(\"username\"),\r\n    postTitle: query.get(\"postTitle\"),\r\n    postText: query.get(\"postText\"),\r\n    tags: query.get(\"tags\"),\r\n  };\r\n\r\n  const [bark, setBark] = useState({\r\n    id: currentBark.id,\r\n    username: currentBark.username,\r\n    postTitle: currentBark.postTitle,\r\n    postText: currentBark.postText,\r\n    tags: currentBark.tags,\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (!bark.postTitle || !bark.postText) {\r\n      /* ADD BETTER ERROR MESSAGES */\r\n      toastr.error(\"Please complete all form fields.\", \"Form Error\");\r\n      return;\r\n    }\r\n    await client\r\n      .updatePost(currentBark.id, bark)\r\n      .then(() => {\r\n        toastr.success(\"Buck up! Your bark was successfully updated.\", \"BARK!\");\r\n        setSubmitted(true);\r\n      })\r\n      .catch((error) => {\r\n        toastr.error(error, \"Error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {submitted ? (\r\n        <Redirect to=\"/userbarks\" />\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center\">\r\n            <Col>\r\n              <br />\r\n              <h1 className=\"text-center\">Edit Bark</h1>\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <BarkForm\r\n                submitHandler={submitHandler}\r\n                bark={bark}\r\n                setBark={setBark}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { NewUserForm } from \"../Componenets\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { ClientContext } from \"../Context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nexport const NewUser = () => {\r\n  const [newUser, setNewUser] = useState({\r\n    username: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const { client } = useContext(ClientContext);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (newUser.password1 !== newUser.password2) {\r\n      toastr.warning(\"Your passwords must match.\", \"Password Mismatch\");\r\n      return;\r\n    }\r\n    await client\r\n      .addUser(newUser.username, newUser.password1)\r\n      .then(() => {\r\n        setNewUser({\r\n          username: \"\",\r\n          password1: \"\",\r\n          password2: \"\",\r\n        });\r\n        toastr.success(\r\n          \"New Facebuck account created. Please login.\",\r\n          \"Success!\"\r\n        );\r\n        setSubmitted(true);\r\n      })\r\n      .catch((err) => {\r\n        toastr.error(err.response.data, \"New User Account Error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {submitted ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center\">\r\n            <Col>\r\n              <br />\r\n              <h1 className=\"text-center\">Create a New User Account</h1>\r\n              <br />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12} lg={6}>\r\n              <NewUserForm\r\n                submitHandler={submitHandler}\r\n                newUser={newUser}\r\n                setNewUser={setNewUser}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { createApi } from \"unsplash-js\";\r\nimport env from \"react-dotenv\";\r\n\r\nconst url = \"https://lit-harbor-58321.herokuapp.com/\"; // Make env variable\r\nconst unsplashApi = createApi({\r\n  accessKey: env.UNSPLASHACCESSKEY,\r\n});\r\n\r\nexport class ApiClient {\r\n  constructor(tokenProvider, logoutHandler) {\r\n    this.tokenProvider = tokenProvider;\r\n    this.logoutHandler = logoutHandler;\r\n  }\r\n\r\n  /* Login API Call */\r\n  async login(username, password) {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: `${url}auth`,\r\n      data: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n  }\r\n\r\n  /* Unsecure API Calls to social site backend */\r\n\r\n  async getAllPosts(limit, skip) {\r\n    skip = skip ? skip : 0;\r\n    limit = limit ? limit : 10;\r\n    const posts = await axios.get(`${url}posts`, {\r\n      params: { limit, skip },\r\n    });\r\n    return posts.data;\r\n  }\r\n\r\n  async getOneUsersPosts(username, limit, skip) {\r\n    skip = skip ? skip : 0;\r\n    limit = limit ? limit : 10;\r\n    const posts = await axios.get(`${url}posts/user/${username}`, {\r\n      params: { limit, skip },\r\n    });\r\n    return posts.data;\r\n  }\r\n\r\n  async getOnePost(postId) {\r\n    return await axios({\r\n      method: \"get\",\r\n      url: `${url}posts/id/${postId}`,\r\n    });\r\n  }\r\n\r\n  async addUser(username, password) {\r\n    return await axios({\r\n      method: \"post\",\r\n      url: `${url}user/add`,\r\n      data: { username, password },\r\n    });\r\n  }\r\n\r\n  async addLike(postId) {\r\n    return await axios({\r\n      method: \"patch\",\r\n      url: `${url}posts/like/${postId}`,\r\n    });\r\n  }\r\n\r\n  async removeLike(postId) {\r\n    return await axios({\r\n      method: \"patch\",\r\n      url: `${url}posts/unlike/${postId}`,\r\n    });\r\n  }\r\n\r\n  /* Autheticated Call Definition */\r\n  authenticatedCall(method, url, data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      headers: {\r\n        authorization: this.tokenProvider(),\r\n      },\r\n      data,\r\n    }).catch((error) => {\r\n      if (error.response.status === 403) {\r\n        this.logoutHandler();\r\n        return Promise.reject();\r\n      } else {\r\n        throw error;\r\n      }\r\n    });\r\n  }\r\n\r\n  /* Secure API Calls to social site backend */\r\n\r\n  addPost(data) {\r\n    const post = { ...data, likes: \"0\", timestamp: Date.now() };\r\n    return this.authenticatedCall(\"post\", `${url}posts/add`, post);\r\n  }\r\n\r\n  //needs updating and splitting out into username and password\r\n  updatePost(postId, data) {\r\n    return this.authenticatedCall(\"put\", `${url}posts/${postId}`, data); \r\n  }\r\n\r\n  deletePost(postId) {\r\n    return this.authenticatedCall(\"delete\", `${url}posts/${postId}`);\r\n  }\r\n\r\n  getUserInfo(username) {\r\n    return this.authenticatedCall(\"get\", `${url}user/${username}`);\r\n  }\r\n\r\n  updateUserInfo(username, newPassword) {\r\n    return this.authenticatedCall(\"put\", `${url}user/${username}`, {\r\n      newPassword,\r\n    });\r\n  }\r\n\r\n  deleteUser(username) {\r\n    return this.authenticatedCall(\"delete\", `${url}user/${username}`);\r\n  }\r\n\r\n  /* Unsplash API Calls */\r\n\r\n  unsplashPhotoSearch(query, count, orientation) {\r\n    const res = unsplashApi.search\r\n      .getPhotos({ query, count, orientation })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    return res;\r\n  }\r\n\r\n  unsplashRandomPhoto(query, count) {\r\n    const res = unsplashApi.photos\r\n      .getRandom({ query, count })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    return res;\r\n  }\r\n}\r\n","export const toastrSettings = {\r\n  closeButton: true,\r\n  debug: false,\r\n  newestOnTop: true,\r\n  progressBar: false,\r\n  positionClass: \"toast-bottom-center\",\r\n  preventDuplicates: false,\r\n  onclick: null,\r\n  showDuration: \"300\",\r\n  hideDuration: \"1000\",\r\n  timeOut: \"8000\",\r\n  extendedTimeOut: \"1000\",\r\n  showEasing: \"linear\",\r\n  hideEasing: \"linear\",\r\n  showMethod: \"show\",\r\n  hideMethod: \"hide\",\r\n};\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { MyNav, MyFooter } from \"./Componenets\";\r\nimport {\r\n  AddBark,\r\n  Feed,\r\n  HoofedHouse,\r\n  Login,\r\n  PrivateRoute,\r\n  UserBarks,\r\n  EditBark,\r\n  NewUser,\r\n} from \"./Pages\";\r\nimport { ApiClient } from \"./Clients/apiClient\";\r\nimport { UserContext, ClientContext } from \"./Context\";\r\nimport toastr from \"toastr\";\r\nimport { toastrSettings } from \"./Settings\";\r\nimport \"toastr/build/toastr.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Styles/App.css\";\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(\r\n    window.localStorage.getItem(\"facebuck-token\")\r\n  );\r\n\r\n  const client = new ApiClient(\r\n    () => token,\r\n    () => deleteUserToken()\r\n  );\r\n\r\n  const userValue = useMemo(() => ({ user, setUser }), [user, setUser]);\r\n  const clientValue = { client };\r\n  toastr.options = toastrSettings;\r\n\r\n  const storeUserToken = (t) => {\r\n    window.localStorage.setItem(\"facebuck-token\", t);\r\n    setToken(t);\r\n  };\r\n\r\n  const deleteUserToken = () => {\r\n    window.localStorage.removeItem(\"facebuck-token\");\r\n    setToken(undefined);\r\n    setUser(null);\r\n    toastr.info(\"You have been logged out.\");\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={userValue}>\r\n        <ClientContext.Provider value={clientValue}>\r\n          <MyNav logout={() => deleteUserToken()} />\r\n          <Container>\r\n            <Switch>\r\n              <Route path=\"/\" exact render={() => <Feed />} />\r\n              <Route path=\"/new-user\" render={() => <NewUser />} />\r\n              <Route path=\"/house\" render={() => <HoofedHouse />} />\r\n              <Route\r\n                path=\"/login\"\r\n                render={() => (\r\n                  <Login storeUserToken={(t) => storeUserToken(t)} />\r\n                )}\r\n              />\r\n\r\n              <PrivateRoute>\r\n                <Route path=\"/add\" render={() => <AddBark />} />\r\n                <Route path=\"/userbarks\" render={() => <UserBarks />} />\r\n                <Route path=\"/editbark\" render={() => <EditBark />} />\r\n              </PrivateRoute>\r\n\r\n              <Route path=\"/\">Error: 404 not found</Route>\r\n            </Switch>\r\n          </Container>\r\n          <MyFooter />\r\n        </ClientContext.Provider>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}