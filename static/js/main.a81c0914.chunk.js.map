{"version":3,"sources":["ViewPosts.js","Add.js","MyNav.js","App.js","reportWebVitals.js","index.js"],"names":["ViewPosts","this","props","postList","map","currentPost","Card","className","Body","Container","Row","username","text","Col","likes","Button","onClick","increaseLikeCount","id","buildPostCards","React","Component","Add","state","ref","createRef","event","newState","target","name","value","setState","preventDefault","onsubmit","Form","onChange","e","handleChange","onSubmit","submitHandler","Group","controlId","Label","Control","type","variant","MyNav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Text","to","App","posts","postRefs","newPost","concat","console","log","element","path","updatePosts","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a81c0914.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./App.css\";\r\n\r\nclass ViewPosts extends React.Component {\r\n  // increaseLikeCount(id) {\r\n  //   this.setState((state) => ({\r\n  //     likes: state.likes + 1,\r\n  //   }));\r\n  // }\r\n\r\n  // increaseLikeCount(id) {\r\n  //   this.props.postList.map((currentPost) => {\r\n  //     if (currentPost.id === id) {\r\n  //       console.log(currentPost.likes + 1);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  buildPostCards() {\r\n    return this.props.postList.map((currentPost) => (\r\n      <Card className=\"post\">\r\n        <Card.Body>\r\n          <Container>\r\n            <Row>\r\n              <h3>Username: {currentPost.username} </h3>\r\n            </Row>\r\n            {/* <Row>\r\n              <Col>\r\n                <p>ID: {currentPost.id} </p>\r\n              </Col>\r\n            </Row> */}\r\n            <Row>\r\n              <p> {currentPost.text} </p>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>Likes: {currentPost.likes} </p>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => this.increaseLikeCount(currentPost.id)}>\r\n                  Thumb\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <Row className=\"postList\">{this.buildPostCards()}</Row>;\r\n  }\r\n}\r\n\r\nexport default ViewPosts;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n//import toastr from 'toastr';\r\n//import 'toastr/build/toastr.min.css';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      ref: React.createRef(),\r\n      username: \"\",\r\n      text: \"\",\r\n      likes: 0,\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    const newState = {};\r\n    newState[event.target.name] = event.target.value;\r\n    this.setState(newState)\r\n  }\r\n\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onsubmit(\r\n      this.state.id,\r\n      this.state.ref,\r\n      this.state.username,\r\n      this.state.text,\r\n      this.state.likes\r\n    );\r\n    //toastr.success(\"Posted\");\r\n    this.setState((state) => ({\r\n      id: state.id + 1,\r\n      ref: state.ref + 1,\r\n      username: \"\",\r\n      text: \"\",\r\n      likes: 0,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        onChange={(e) => this.handleChange(e)}\r\n        onSubmit={(e) => this.submitHandler(e)}\r\n      >\r\n        <Form.Group controlId=\"postUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            name=\"username\"\r\n            type=\"text\"\r\n            value={this.state.username}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postText\">\r\n          <Form.Label>Post</Form.Label>\r\n          <Form.Control\r\n            name=\"text\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass MyNav extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n          <Navbar.Brand>MyFace</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Navbar.Text>\r\n                <Link to=\"/\">View Posts</Link>\r\n              </Navbar.Text>\r\n              <Navbar.Text>\r\n                <Link to=\"/add\">Add Posts</Link>\r\n              </Navbar.Text>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyNav;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ViewPosts from \"./ViewPosts\";\nimport Add from \"./Add\";\nimport MyNav from \"./MyNav\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      postRefs: [],\n    };\n  }\n\n  // createPost(i, ref) {\n  //   return (\n  //     <Post\n  //       key={i}\n  //       ref={ref}\n  //       postName={\"post\" + (i + 1)}\n  //       postUsername=\"User\"\n  //       postText=\"Test text\"\n  //     />\n  //   );\n  // }\n\n  // addPost() {\n  //   this.setState((state) => {\n  //     const ref = React.createRef();\n  //     const newPost = this.createPost(state.posts.length, ref);\n  //     return {\n  //       posts: state.posts.concat(newPost),\n  //       postRefs: state.postRefs.concat(ref),\n  //     };\n  //   });\n  // }\n\n  updatePosts(id, ref, username, text, likes) {\n    const newPost = { id, ref, username, text, likes };\n    this.setState(\n      (state) => ({\n        posts: state.posts.concat(newPost),\n      })\n      //() => localStorage.setItem(\"list\", JSON.stringify(this.state.postItems))\n    );\n    console.log(this.state.posts);\n  }\n\n  increaseLikeCount(id) {\n    console.log(\"test\")\n    this.state.posts.map((element) => {\n      if (element.id === id) {\n        this.setState((state) => ({\n          likes: state.likes + 1,\n        }));\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <MyNav />\n        <Container>\n          <Switch>\n            <Route path=\"/add\">\n              <Add\n                onsubmit={(id, ref, username, text, likes) =>\n                  this.updatePosts(id, ref, username, text, likes)\n                }\n              />\n            </Route>\n            <Route exact path=\"/\">\n              <ViewPosts postList={this.state.posts} />\n            </Route>\n            <Route path=\"/\">Error: 404 not found</Route>\n          </Switch>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}